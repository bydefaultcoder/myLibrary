# Generated by Django 4.2 on 2024-09-04 10:14

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('students', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('booking_time', models.DateTimeField(auto_now_add=True)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', editable=False, max_length=10)),
                ('duration', models.DurationField(default=datetime.timedelta(days=30))),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Seat Booking',
                'verbose_name_plural': 'Seat Bookings',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('location_name', models.CharField(max_length=100)),
                ('location_id', models.AutoField(primary_key=True, serialize=False, verbose_name='Location No')),
                ('discription', models.TextField()),
                ('number_of_seats', models.PositiveIntegerField(verbose_name='No of Seats')),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', editable=False, max_length=10)),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'library',
                'verbose_name_plural': 'libraries',
            },
        ),
        migrations.CreateModel(
            name='Seat',
            fields=[
                ('seat_id', models.AutoField(primary_key=True, serialize=False, verbose_name='Seat Id')),
                ('seat_no', models.PositiveIntegerField(blank=True, editable=False, null=True, verbose_name='Seat No')),
                ('status', models.CharField(choices=[('vacant', 'Vacant'), ('engaged', 'Engaged'), ('inactive', 'Inactive')], default='vacant', editable=False, max_length=10)),
                ('deleted', models.BooleanField(blank=None, default=False)),
                ('created_by', models.ForeignKey(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.location', verbose_name='Location no.')),
            ],
            options={
                'verbose_name': 'Seat',
                'verbose_name_plural': 'Seats',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('payment_id', models.AutoField(primary_key=True, serialize=False, verbose_name='Location No')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=6, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Amount (₹)')),
                ('paid_amount', models.DecimalField(decimal_places=2, max_digits=6, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Paid Amount (₹)')),
                ('discount', models.DecimalField(decimal_places=2, max_digits=6, validators=[django.core.validators.MinValueValidator(100)], verbose_name='Discount (in %)')),
                ('payment_time', models.DateTimeField(auto_now_add=True)),
                ('joining_date', models.DateField(default=django.utils.timezone.now, verbose_name='Joining from')),
                ('remain_no_of_months', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='No. of Months')),
                ('booking', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='booking.booking')),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Payment',
                'verbose_name_plural': 'Payments',
            },
        ),
        migrations.CreateModel(
            name='MonthlyPlan',
            fields=[
                ('timming_id', models.AutoField(primary_key=True, serialize=False, verbose_name='Location No')),
                ('hours', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1)], verbose_name='No. of hours')),
                ('prize', models.PositiveIntegerField(verbose_name='Monthly price(in rupees)')),
                ('discription', models.TextField()),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', editable=False, max_length=10)),
                ('created_by', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Monthly Plan',
                'verbose_name_plural': 'Monthly Plans',
            },
        ),
        migrations.AddField(
            model_name='booking',
            name='seat',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='booking.seat'),
        ),
        migrations.AddField(
            model_name='booking',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='students.student'),
        ),
    ]
